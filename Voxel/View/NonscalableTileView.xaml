<Window
  x:Name="window"
  x:Class="Voxel.View.NonscalableTileView"
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
  xmlns:local="clr-namespace:Voxel.View"
  xmlns:converters="clr-namespace:Voxel.Converters"
  xmlns:m="clr-namespace:Voxel.Model"
  mc:Ignorable="d"
  ResizeMode="CanMinimize"
  Title="{Binding WindowTitle}"
  Height="320"
  Width="600"
  WindowStartupLocation="CenterOwner"
  MinWidth="500"
  MinHeight="273"
  Icon="/Voxel;component/Voxel.ico">
  <Window.Resources>
    <BooleanToVisibilityConverter
      x:Key="visibilityConverter" />
    <converters:BooleanNotConverter
      x:Key="notConverter" />
    <Storyboard
      SpeedRatio="3"
      x:Key="startWaiting">
      <DoubleAnimation
        Storyboard.TargetName="rectColor"
        Storyboard.TargetProperty="Opacity"
        Duration="0:0:0.3"
        To="1">
        <DoubleAnimation.EasingFunction>
          <CircleEase
            EasingMode="EaseOut" />
        </DoubleAnimation.EasingFunction>
      </DoubleAnimation>
      <DoubleAnimationUsingKeyFrames
        RepeatBehavior="Forever"
        Storyboard.TargetName="circleLeft"
        Storyboard.TargetProperty="Width">
        <LinearDoubleKeyFrame
          KeyTime="0:0:0"
          Value="18" />
        <LinearDoubleKeyFrame
          KeyTime="0:0:1"
          Value="30" />
        <LinearDoubleKeyFrame
          KeyTime="0:0:2"
          Value="18" />
      </DoubleAnimationUsingKeyFrames>
      <DoubleAnimationUsingKeyFrames
        RepeatBehavior="Forever"
        Storyboard.TargetName="circleLeft"
        Storyboard.TargetProperty="Height">
        <LinearDoubleKeyFrame
          KeyTime="0:0:0"
          Value="18" />
        <LinearDoubleKeyFrame
          KeyTime="0:0:1"
          Value="30" />
        <LinearDoubleKeyFrame
          KeyTime="0:0:2"
          Value="18" />
      </DoubleAnimationUsingKeyFrames>
      <DoubleAnimationUsingKeyFrames
        RepeatBehavior="Forever"
        BeginTime="0:0:0.5"
        Storyboard.TargetName="circleCenter"
        Storyboard.TargetProperty="Width">
        <LinearDoubleKeyFrame
          KeyTime="0:0:0"
          Value="18" />
        <LinearDoubleKeyFrame
          KeyTime="0:0:1"
          Value="30" />
        <LinearDoubleKeyFrame
          KeyTime="0:0:2"
          Value="18" />
      </DoubleAnimationUsingKeyFrames>
      <DoubleAnimationUsingKeyFrames
        RepeatBehavior="Forever"
        BeginTime="0:0:0.5"
        Storyboard.TargetName="circleCenter"
        Storyboard.TargetProperty="Height">
        <LinearDoubleKeyFrame
          KeyTime="0:0:0"
          Value="18" />
        <LinearDoubleKeyFrame
          KeyTime="0:0:1"
          Value="30" />
        <LinearDoubleKeyFrame
          KeyTime="0:0:2"
          Value="18" />
      </DoubleAnimationUsingKeyFrames>
      <DoubleAnimationUsingKeyFrames
        RepeatBehavior="Forever"
        BeginTime="0:0:1"
        Storyboard.TargetName="circleRight"
        Storyboard.TargetProperty="Width">
        <LinearDoubleKeyFrame
          KeyTime="0:0:0"
          Value="18" />
        <LinearDoubleKeyFrame
          KeyTime="0:0:1"
          Value="30" />
        <LinearDoubleKeyFrame
          KeyTime="0:0:2"
          Value="18" />
      </DoubleAnimationUsingKeyFrames>
      <DoubleAnimationUsingKeyFrames
        RepeatBehavior="Forever"
        BeginTime="0:0:1"
        Storyboard.TargetName="circleRight"
        Storyboard.TargetProperty="Height">
        <LinearDoubleKeyFrame
          KeyTime="0:0:0"
          Value="18" />
        <LinearDoubleKeyFrame
          KeyTime="0:0:1"
          Value="30" />
        <LinearDoubleKeyFrame
          KeyTime="0:0:2"
          Value="18" />
      </DoubleAnimationUsingKeyFrames>
    </Storyboard>
    <Storyboard
      x:Key="stopWaiting">
      <DoubleAnimation
        Storyboard.TargetName="rectColor"
        Storyboard.TargetProperty="Opacity"
        Duration="0:0:0.3"
        To="0">
        <DoubleAnimation.EasingFunction>
          <CircleEase
            EasingMode="EaseOut" />
        </DoubleAnimation.EasingFunction>
      </DoubleAnimation>
    </Storyboard>
  </Window.Resources>
  <Grid
    x:Name="gridMain"
    Background="#FF323232">
    <Grid.ColumnDefinitions>
      <ColumnDefinition
        Width="330" />
      <ColumnDefinition />
    </Grid.ColumnDefinitions>
    <Grid.RowDefinitions>
      <RowDefinition
        Height="1*" />
      <RowDefinition
        Height="45" />
    </Grid.RowDefinitions>
    <ToggleButton
      IsChecked="{Binding IsTileSizeToggleChecked, Mode=TwoWay}"
      x:Name="toggleTileSize"
      Style="{StaticResource TileSizeToggle}"
      Grid.Column="1"
      Height="30"
      Content="{Binding ToggleTileSizeLeft}"
      Tag="{Binding ToggleTileSizeRight}"
      Margin="0,0,0,10"
      HorizontalAlignment="Center"
      VerticalAlignment="Bottom" />
    <Button
      x:Name="buttonReset"
      Background="Transparent"
      Foreground="White"
      Style="{StaticResource DarkButton}"
      Content="{Binding ButtonReset}"
      Command="{Binding ResetCommand}"
      IsEnabled="{Binding IsBusy, Converter={StaticResource notConverter}}"
      Grid.Column="1"
      Width="70"
      Height="25"
      HorizontalAlignment="Center"
      VerticalAlignment="Top"
      Margin="0,20,0,0" />
    <Grid
      Visibility="{Binding SmallPreviewVisibility}"
      x:Name="gridPreviewSmall"
      Grid.Column="1"
      Margin="0"
      HorizontalAlignment="Center"
      VerticalAlignment="Center"
      Width="{x:Static m:TileSize.SmallWidthAndHeight}"
      Height="{x:Static m:TileSize.SmallWidthAndHeight}"
      Background="{Binding Background}">
      <Grid.Effect>
        <DropShadowEffect
          ShadowDepth="0"
          BlurRadius="15"
          Opacity="0.4" />
      </Grid.Effect>
      <Image
        Stretch="Fill"
        x:Name="imageBackgroundSmall"
        Source="{Binding BackImageSmall}"
        RenderTransformOrigin="0.5,0.5" />
      <Border
        HorizontalAlignment="Center"
        Height="32"
        VerticalAlignment="Center"
        Width="32">
        <Image
          Stretch="Uniform"
          x:Name="imageIconSmall"
          Source="{Binding Icon}"
          Visibility="{Binding IconVisibility}"
          RenderTransformOrigin="0.5,0.5" />
      </Border>
    </Grid>
    <Grid
      Visibility="{Binding LargePreviewVisibility}"
      x:Name="gridPreview"
      Grid.Column="1"
      Margin="0"
      HorizontalAlignment="Center"
      VerticalAlignment="Center"
      Width="{x:Static m:TileSize.LargeWidthAndHeight}"
      Height="{x:Static m:TileSize.LargeWidthAndHeight}"
      Background="{Binding Background}">
      <Grid.Effect>
        <DropShadowEffect
          ShadowDepth="0"
          BlurRadius="15"
          Opacity="0.4" />
      </Grid.Effect>
      <Image
        Stretch="Fill"
        x:Name="imageBackground"
        Source="{Binding BackImage}"
        RenderTransformOrigin="0.5,0.5" />
      <Border
        HorizontalAlignment="Center"
        Height="40"
        VerticalAlignment="Center"
        Width="40">
        <Image
          Stretch="Uniform"
          x:Name="imageIcon"
          Source="{Binding Icon}"
          Visibility="{Binding IconVisibility}"
          RenderTransformOrigin="0.5,0.5" />
      </Border>
      <TextBlock
        x:Name="textName"
        Visibility="{Binding ShowName, Converter={StaticResource visibilityConverter}}"
        HorizontalAlignment="Left"
        TextWrapping="Wrap"
        Text="{Binding TargetName}"
        VerticalAlignment="Bottom"
        Foreground="{Binding NameForeground}"
        Margin="8,0,16,5"
        FontFamily="Segoe UI" />
      <TextBlock
        Foreground="{Binding NameForeground}"
        x:Name="textLongNameMark"
        Text="..."
        Visibility="{Binding ShowLongNameMark, Converter={StaticResource visibilityConverter}}"
        HorizontalAlignment="Right"
        VerticalAlignment="Bottom"
        Margin="0,0,10,5"
        FontFamily="Segoe UI" />
    </Grid>
    <Grid
      Background="{Binding ElementName=gridMain,Path=Background}"
      x:Name="gridOptions"
      Margin="0"
      VerticalAlignment="Center"
      Height="200">
      <Grid.RowDefinitions>
        <RowDefinition
          Height="40" />
        <RowDefinition
          Height="40" />
        <RowDefinition
          Height="40" />
        <RowDefinition
          Height="40" />
        <RowDefinition
          Height="40" />
      </Grid.RowDefinitions>
      <Button
        Style="{StaticResource OptionButton}"
        x:Name="buttonTarget"
        Content="{Binding ButtonTarget}"
        Grid.Row="0"
        IsEnabled="{Binding IsBusy, Converter={StaticResource notConverter}}"
        Command="{Binding SelectFileCommand}"
        ToolTip="{Binding ButtonTargetTip}">
        <Button.InputBindings>
          <MouseBinding
            Gesture="RightClick"
            Command="{Binding SelectFolderCommand}" />
        </Button.InputBindings>
      </Button>
      <Button
        Style="{StaticResource OptionButton}"
        x:Name="buttonBackImage"
        Content="{Binding ButtonBackImage}"
        Grid.Row="1"
        IsEnabled="{Binding IsBusy, Converter={StaticResource notConverter}}"
        ToolTip="{Binding ButtonBackImageTip}"
        Command="{Binding SelectBackImageCommand}">
        <Button.InputBindings>
          <MouseBinding
            Gesture="RightClick"
            Command="{Binding ClearBackImageCommand}" />
        </Button.InputBindings>
      </Button>
      <Button
        Style="{StaticResource OptionButton}"
        x:Name="buttonBackColor"
        Content="{Binding ButtonBackColor}"
        Grid.Row="2"
        IsEnabled="{Binding IsBusy, Converter={StaticResource notConverter}}"
        ToolTip="{Binding ButtonBackColorTip}"
        Command="{Binding SelectColorCommand}"
        CommandParameter="{Binding ElementName=gridPreview}">
        <Button.InputBindings>
          <MouseBinding
            Gesture="RightClick"
            Command="{Binding DefaultColorCommand}" />
        </Button.InputBindings>
      </Button>
      <CheckBox
        Style="{StaticResource OptionCheckBox}"
        BorderThickness="0,0,4,0"
        x:Name="checkBoxDarkTheme"
        Content="{Binding CheckBoxDarkTheme}"
        Grid.Row="3"
        IsEnabled="{Binding ShowName}"
        IsChecked="{Binding IsDarkTheme, Mode=TwoWay}" />
      <CheckBox
        Style="{StaticResource OptionCheckBox}"
        BorderThickness="0,0,4,0"
        x:Name="checkBoxShowName"
        IsEnabled="{Binding IsBusy, Converter={StaticResource notConverter}}"
        Content="{Binding CheckBoxShowName}"
        Grid.Row="4"
        IsChecked="{Binding ShowName, Mode=TwoWay}" />
    </Grid>
    <Grid
      x:Name="gridBottom"
      Grid.ColumnSpan="2"
      Margin="0"
      Grid.Row="1"
      VerticalAlignment="Stretch"
      Background="{StaticResource HighlightColor}">
      <!--<Grid.Effect>
        <DropShadowEffect
          BlurRadius="20"
          ShadowDepth="0"
          Opacity="0.5" />
      </Grid.Effect>-->
      <Grid.ColumnDefinitions>
        <ColumnDefinition
          Width="1*" />
        <ColumnDefinition
          Width="1*" />
        <ColumnDefinition
          Width="1*" />
        <ColumnDefinition
          Width="1*" />
      </Grid.ColumnDefinitions>
      <Button
        x:Name="buttonExport"
        Grid.Column="3"
        IsEnabled="{Binding IsBusy, Converter={StaticResource notConverter}}"
        Style="{StaticResource ToolButton}"
        Command="{Binding ExportCommand}">
        <StackPanel
          Orientation="Horizontal">
          <Viewbox
            Margin="0,0,15,0"
            Height="{StaticResource IconSize}"
            Width="{StaticResource IconSize}"
            Child="{StaticResource Export}" />
          <Viewbox
            Margin="0,0,15,0"
            Height="{StaticResource ToolButtonTextSize}">
            <TextBlock
              Style="{StaticResource ToolTextBlock}"
              Text="{Binding ButtonExport}" />
          </Viewbox>
        </StackPanel>
      </Button>
      <Button
        x:Name="buttonImport"
        Grid.Column="2"
        IsEnabled="{Binding IsBusy, Converter={StaticResource notConverter}}"
        Style="{StaticResource ToolButton}"
        Command="{Binding ImportCommand}">
        <StackPanel
          Orientation="Horizontal">
          <Viewbox
            Margin="0,0,15,0"
            Height="{StaticResource IconSize}"
            Width="{StaticResource IconSize}"
            Child="{StaticResource Import}" />
          <Viewbox
            Margin="0,0,15,0"
            Height="{StaticResource ToolButtonTextSize}">
            <TextBlock
              Style="{StaticResource ToolTextBlock}"
              Text="{Binding ButtonImport}" />
          </Viewbox>
        </StackPanel>
      </Button>
      <Button
        x:Name="buttonAddToStart"
        Grid.Column="1"
        IsEnabled="{Binding IsBusy, Converter={StaticResource notConverter}}"
        Style="{StaticResource ToolButton}"
        Command="{Binding AddToStartCommand}">
        <StackPanel
          Orientation="Horizontal">
          <Viewbox
            Margin="0,0,15,0"
            Height="{StaticResource IconSize}"
            Width="{StaticResource IconSize}"
            Child="{StaticResource WindowsLogo}" />
          <Viewbox
            Margin="0,0,5,0"
            Height="{StaticResource ToolButtonTextSize}">
            <TextBlock
              Style="{StaticResource ToolTextBlock}"
              Text="{Binding ButtonAddToStart}" />
          </Viewbox>
        </StackPanel>
      </Button>
      <Button
        x:Name="buttonGenrate"
        IsEnabled="{Binding IsBusy, Converter={StaticResource notConverter}}"
        Style="{StaticResource ToolButton}"
        Command="{Binding GenerateCommand}">
        <StackPanel
          Orientation="Horizontal">
          <Viewbox
            Margin="0,0,15,0"
            Height="{StaticResource IconSize}"
            Width="{StaticResource IconSize}"
            Child="{StaticResource Generate}" />
          <Viewbox
            Margin="0,0,15,0"
            Height="{StaticResource ToolButtonTextSize}">
            <TextBlock
              Style="{StaticResource ToolTextBlock}"
              Text="{Binding ButtonGenerate}" />
          </Viewbox>
        </StackPanel>
      </Button>

    </Grid>
    <Rectangle
      Visibility="{Binding IsWaiting, Converter={StaticResource visibilityConverter}}"
      Grid.RowSpan="3"
      Grid.ColumnSpan="2"
      Margin="0">
      <Rectangle.Fill>
        <SolidColorBrush
          x:Name="rectColor"
          Color="#A333"
          Opacity="1" />
      </Rectangle.Fill>
    </Rectangle>
    <Grid
      Visibility="{Binding IsWaiting, Converter={StaticResource visibilityConverter}}"
      Grid.RowSpan="3"
      Grid.ColumnSpan="2"
      Width="150"
      Height="50"
      HorizontalAlignment="Center"
      VerticalAlignment="Center">
      <Grid.ColumnDefinitions>
        <ColumnDefinition />
        <ColumnDefinition />
        <ColumnDefinition />
      </Grid.ColumnDefinitions>
      <Ellipse
        Grid.Column="0"
        HorizontalAlignment="Center"
        VerticalAlignment="Center"
        x:Name="circleLeft"
        Fill="White"
        Width="18"
        Height="18" />
      <Ellipse
        Grid.Column="1"
        HorizontalAlignment="Center"
        VerticalAlignment="Center"
        x:Name="circleCenter"
        Fill="White"
        Width="18"
        Height="18" />
      <Ellipse
        Grid.Column="2"
        HorizontalAlignment="Center"
        VerticalAlignment="Center"
        x:Name="circleRight"
        Fill="White"
        Width="18"
        Height="18" />
    </Grid>
  </Grid>
</Window>