<Window
  x:Class="Voxel.View.ImageTileView"
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
  xmlns:converters="clr-namespace:Voxel.Converters"
  xmlns:m="clr-namespace:Voxel.Model"
  xmlns:controls="clr-namespace:Voxel.Controls"
  xmlns:sys="clr-namespace:System;assembly=mscorlib"
  mc:Ignorable="d"
  Title="{Binding WindowTitle}"
  WindowStartupLocation="CenterOwner"
  Height="524"
  Width="1000"
  MinWidth="320"
  MinHeight="300"
  Icon="/Voxel;component/Voxel.ico">
  <Window.Resources>
    <converters:BooleanStretchConverter
      x:Key="bsConverter" />
    <BooleanToVisibilityConverter
      x:Key="visibilityConverter" />
    <converters:BooleanNotConverter
      x:Key="notConverter" />
  </Window.Resources>
  <Grid
    x:Name="gridMain"
    Background="#323232">
    <Grid.ColumnDefinitions>
      <ColumnDefinition
        Width="330" />
      <ColumnDefinition />
    </Grid.ColumnDefinitions>
    <Grid.RowDefinitions>
      <RowDefinition
        Height="45" />
      <RowDefinition
        Height="1*" />
      <RowDefinition
        Height="45" />
    </Grid.RowDefinitions>

    <Grid
      Background="{StaticResource HighlightColor}"
      Grid.ColumnSpan="2"
      Grid.Row="0"
      x:Name="gridHeader">
      <Grid.Resources>
        <ResourceDictionary>
          <Style
            BasedOn="{StaticResource ToolTextBlock}"
            TargetType="TextBlock"
            x:Key="LabelStyle">
            <Setter
              Property="Foreground"
              Value="White" />
            <Setter
              Property="HorizontalAlignment"
              Value="Right" />
            <Setter
              Property="VerticalAlignment"
              Value="Center" />
            <Setter
              Property="Margin"
              Value="0,0,5,0" />
          </Style>
          <Style
            TargetType="TextBox"
            BasedOn="{StaticResource DarkTextBox}"
            x:Key="InputBox">
            <Setter
              Property="TextWrapping"
              Value="NoWrap" />
            <Setter
              Property="VerticalAlignment"
              Value="Center" />
            <Setter
              Property="HorizontalAlignment"
              Value="Stretch" />
            <Setter
              Property="MaxWidth"
              Value="400" />
            <Setter
              Property="FontSize"
              Value="14" />
            <Setter
              Property="Height"
              Value="30" />
            <Setter
              Property="Margin"
              Value="5,0,5,0" />
            <Setter
              Property="VerticalContentAlignment"
              Value="Center" />
            <Setter
              Property="Padding"
              Value="4,0,0,0" />
          </Style>
        </ResourceDictionary>
      </Grid.Resources>
      <Grid.ColumnDefinitions>
        <ColumnDefinition
          Width="1*" />
        <ColumnDefinition
          Width="2*" />
        <ColumnDefinition
          Width="1*" />
        <ColumnDefinition
          Width="2*" />
        <ColumnDefinition
          Width="1*" />
        <ColumnDefinition
          Width="2*" />
      </Grid.ColumnDefinitions>

      <TextBlock
        Style="{StaticResource LabelStyle}"
        Grid.Column="0"
        Text="{Binding ImageMarginLabel}"/>
      <TextBox
        x:Name="imageMarginText"
        Style="{StaticResource InputBox}"
        Grid.Column="1"
        Text="{Binding ImageMarginText, Mode=TwoWay, UpdateSourceTrigger=LostFocus}">
        <TextBox.InputBindings>
          <KeyBinding
            Command="{Binding Path=ImageMarginEnterCommand}"
            CommandParameter="{Binding ElementName=imageMarginText}"
            Key="Enter" />
        </TextBox.InputBindings>
      </TextBox>
      
      <TextBlock
        Grid.Column="2"
        Style="{StaticResource LabelStyle}"
        Text="{Binding PreviewGridWidthLabel}"/>
      <TextBox
        Grid.Column="3"
        x:Name="previewGridWidthText"
        Style="{StaticResource InputBox}"
        Text="{Binding PreviewGridWidthText, Mode=TwoWay, UpdateSourceTrigger=LostFocus}">
        <TextBox.InputBindings>
          <KeyBinding
            Command="{Binding Path=PreviewGridWidthEnterCommand}"
            CommandParameter="{Binding ElementName=previewGridWidthText}"
            Key="Enter" />
        </TextBox.InputBindings>
      </TextBox>
      
      <TextBlock
        Grid.Column="4"
        Style="{StaticResource LabelStyle}"
        Text="{Binding PreviewGridHeightLabel}" />
      <TextBox
        Grid.Column="5"
        x:Name="previewGridHeightText"
        Style="{StaticResource InputBox}"
        Text="{Binding PreviewGridHeightText, Mode=TwoWay, UpdateSourceTrigger=LostFocus}">
        <TextBox.InputBindings>
          <KeyBinding
            Command="{Binding Path=PreviewGridHeightEnterCommand}"
            CommandParameter="{Binding ElementName=previewGridHeightText}"
            Key="Enter" />
        </TextBox.InputBindings>
      </TextBox>
    </Grid>

    <!--<Grid
      Grid.Column="1"
      x:Name="gridPreview">

      <controls:ImageSpliter
        Stretch="{Binding KeepAspectRatio, Converter={StaticResource bsConverter}, Mode=TwoWay}"
        IsSplit="True"
        BitmapSource="{Binding BackImage}"
        HorizontalAlignment="Center"
        VerticalAlignment="Center"
        Width="{x:Static m:TileSize.LargeWidthAndHeight}"
        Height="{x:Static m:TileSize.LargeWidthAndHeight}"/>

    </Grid>-->
    <ScrollViewer
      VerticalAlignment="Stretch"
      HorizontalAlignment="Stretch"
      HorizontalScrollBarVisibility="Auto"
      VerticalScrollBarVisibility="Auto"
      Grid.Row="1"
      Grid.Column="1">
      <ItemsControl
        Width="{Binding PreviewWidth}"
        Height="{Binding PreviewHeight}"
        Margin="10"
        VerticalAlignment="Center"
        HorizontalAlignment="Center"
        x:Name="spliterControls"
        ItemsSource="{Binding Spliters}">
        <ItemsControl.ItemsPanel>
          <ItemsPanelTemplate>
            <Grid>
              <Grid.Effect>
                <DropShadowEffect
                  ShadowDepth="0"
                  BlurRadius="15"
                  Opacity="0.4" />
              </Grid.Effect>
            </Grid>
          </ItemsPanelTemplate>
        </ItemsControl.ItemsPanel>
      </ItemsControl>
    </ScrollViewer>
    <Border
      Visibility="Collapsed"
      Grid.Row="1"
      Grid.Column="1"
      Width="300"
      Height="300"
      HorizontalAlignment="Center"
      VerticalAlignment="Center"
      BorderBrush="White"
      BorderThickness="1">
      <Image
        HorizontalAlignment="Stretch"
        VerticalAlignment="Stretch"
        Margin="0"
        Stretch="Uniform"
        Source="{Binding TestImage}" />
    </Border>
    <Grid
      Grid.Row="1"
      VerticalAlignment="Center"
      HorizontalAlignment="Stretch"
      x:Name="gridOptions"
      Background="{Binding ElementName=gridMain, Path=Background}">
      <Grid.RowDefinitions>
        <RowDefinition
          Height="40" />
        <RowDefinition
          Height="40" />
        <RowDefinition
          Height="40" />
        <RowDefinition
          Height="40" />
        <RowDefinition
          Height="30" />
      </Grid.RowDefinitions>
      <Button
        Style="{StaticResource OptionButton}"
        x:Name="buttonTarget"
        Content="{Binding ButtonSelectImage}"
        Command="{Binding SelectImageCommand}"
        Grid.Row="0" />
      <CheckBox
        Style="{StaticResource OptionCheckBox}"
        x:Name="checkBoxKeepRatio"
        Content="{Binding CheckBoxKeepRatio}"
        BorderThickness="0,0,4,0"
        IsChecked="{Binding KeepAspectRatio,Mode=TwoWay}"
        Grid.Row="1" />
      <Button
        Style="{StaticResource OptionButton}"
        x:Name="buttonBackColor"
        Content="{Binding ButtonBackColor}"
        Grid.Row="2" />
      <Button
        Style="{StaticResource OptionButton}"
        x:Name="buttonSetAction"
        Content="{Binding ButtonSetAction}"
        Grid.Row="3" />
      <Grid
        Grid.Row="4">
        <Grid.ColumnDefinitions>
          <ColumnDefinition
            Width="1*" />
          <ColumnDefinition
            Width="1*" />
          <ColumnDefinition
            Width="1*" />
          <ColumnDefinition
            Width="1*" />
        </Grid.ColumnDefinitions>
        <RadioButton
          x:Name="radioButtonNone"
          IsChecked="True"
          GroupName="RadioAction"
          Command="{Binding ChangeActionCommand}"
          CommandParameter="{Binding RelativeSource={RelativeSource Self}}"
          Content="{Binding RadioButtonActionNone}"
          Style="{StaticResource OptionRadioButton}"
          Grid.Column="0" />
        <RadioButton
          x:Name="radioButtonFile"
          GroupName="RadioAction"
          Command="{Binding ChangeActionCommand}"
          CommandParameter="{Binding RelativeSource={RelativeSource Self}}"
          Content="{Binding RadioButtonActionFile}"
          Style="{StaticResource OptionRadioButton}"
          Grid.Column="1" />
        <RadioButton
          x:Name="raidoButtonFolder"
          GroupName="RadioAction"
          Command="{Binding ChangeActionCommand}"
          CommandParameter="{Binding RelativeSource={RelativeSource Self}}"
          Content="{Binding RadioButtonActionFolder}"
          Style="{StaticResource OptionRadioButton}"
          Grid.Column="2" />
        <RadioButton
          x:Name="radioButtonUrl"
          GroupName="RadioAction"
          Command="{Binding ChangeActionCommand}"
          CommandParameter="{Binding RelativeSource={RelativeSource Self}}"
          Content="{Binding RadioButtonActionUrl}"
          Style="{StaticResource OptionRadioButton}"
          Grid.Column="3" />
      </Grid>
      
    </Grid>

    <Grid
      x:Name="gridBottom"
      Grid.ColumnSpan="2"
      Margin="0"
      Grid.Row="2"
      VerticalAlignment="Stretch"
      Background="{StaticResource HighlightColor}">
      <Grid.ColumnDefinitions>
        <ColumnDefinition
          Width="1*" />
        <ColumnDefinition
          Width="1*" />
        <ColumnDefinition
          Width="1*" />
        <ColumnDefinition
          Width="1*" />
      </Grid.ColumnDefinitions>
      <Button
        x:Name="buttonExport"
        Grid.Column="3"
        IsEnabled="{Binding IsBusy, Converter={StaticResource notConverter}}"
        Style="{StaticResource ToolButton}"
        Command="{Binding ExportCommand}">
        <StackPanel
          Orientation="Horizontal">
          <Viewbox
            Margin="0,0,15,0"
            Height="{StaticResource IconSize}"
            Width="{StaticResource IconSize}"
            Child="{StaticResource Export}" />
          <Viewbox
            Margin="0,0,15,0"
            Height="{StaticResource ToolButtonTextSize}">
            <TextBlock
              Style="{StaticResource ToolTextBlock}"
              Text="{Binding ButtonExport}" />
          </Viewbox>
        </StackPanel>
      </Button>
      <Button
        x:Name="buttonImport"
        Grid.Column="2"
        IsEnabled="{Binding IsBusy, Converter={StaticResource notConverter}}"
        Style="{StaticResource ToolButton}"
        Command="{Binding ImportCommand}">
        <StackPanel
          Orientation="Horizontal">
          <Viewbox
            Margin="0,0,15,0"
            Height="{StaticResource IconSize}"
            Width="{StaticResource IconSize}"
            Child="{StaticResource Import}" />
          <Viewbox
            Margin="0,0,15,0"
            Height="{StaticResource ToolButtonTextSize}">
            <TextBlock
              Style="{StaticResource ToolTextBlock}"
              Text="{Binding ButtonImport}" />
          </Viewbox>
        </StackPanel>
      </Button>
      <Button
        x:Name="buttonAddToStart"
        Grid.Column="1"
        IsEnabled="{Binding IsBusy, Converter={StaticResource notConverter}}"
        Style="{StaticResource ToolButton}"
        Command="{Binding AddToStartCommand}">
        <StackPanel
          Orientation="Horizontal">
          <Viewbox
            Margin="0,0,15,0"
            Height="{StaticResource IconSize}"
            Width="{StaticResource IconSize}"
            Child="{StaticResource WindowsLogo}" />
          <Viewbox
            Margin="0,0,5,0"
            Height="{StaticResource ToolButtonTextSize}">
            <TextBlock
              Style="{StaticResource ToolTextBlock}"
              Text="{Binding ButtonAddToStart}" />
          </Viewbox>
        </StackPanel>
      </Button>
      <Button
        x:Name="buttonGenrate"
        IsEnabled="{Binding IsBusy, Converter={StaticResource notConverter}}"
        Style="{StaticResource ToolButton}"
        Command="{Binding GenerateCommand}">
        <StackPanel
          Orientation="Horizontal">
          <Viewbox
            Margin="0,0,15,0"
            Height="{StaticResource IconSize}"
            Width="{StaticResource IconSize}"
            Child="{StaticResource Generate}" />
          <Viewbox
            Margin="0,0,15,0"
            Height="{StaticResource ToolButtonTextSize}">
            <TextBlock
              Style="{StaticResource ToolTextBlock}"
              Text="{Binding ButtonGenerate}" />
          </Viewbox>
        </StackPanel>
      </Button>

    </Grid>
  </Grid>
</Window>
